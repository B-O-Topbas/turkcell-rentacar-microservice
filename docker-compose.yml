version: '3.8'

services:
#  kafka:
#    restart: always
#    container_name: kafka-t2
#    image: bashj79/kafka-kraft
#    ports:
#      - "9092:9092"
#    volumes:
#      - kafka_data:/opt/kafka/kafka-logs
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092

#  mongodb:
#    restart: always
#    container_name: turkcell2-filterdb
#    image: mongo
#    ports:
#      - "27017:27017"
#    volumes:
#      - mongodb_data:/data/db








  zipkin:
    restart: always
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  prometheus:
    restart: always
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitor-net







  grafana:
    restart: always
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
    networks:
      - monitor-net


















  keycloak:
    restart: always
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-t2
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    command: start-dev
    volumes:
      - .:/opt/jboss/keycloak/imports










  maintenancedb:
    restart: always
    container_name: maintenancedb-t2
    image: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_TCP_PORT=3306
      - VIRTUAL_PORT=3306
    volumes:
      - maintenancedb_data:/data/db

  paymentdb:
    restart: always
    container_name: paymentdb-t2
    image: mysql
    ports:
      - "3307:3307"
    environment:
      - MYSQL_ROOT_PASSWORD=12345
      - MYSQL_TCP_PORT=3307
      - VIRTUAL_PORT=3307
    volumes:
      - paymentdb_data:/data/db


volumes:
  kafka_data:
  mongodb_data:
  maintenancedb_data:
  paymentdb_data:



  grafana-data:
    driver: local
  grafana-config:
      driver: local


networks:
  es-net:
    driver: bridge
  monitor-net:
    driver: bridge
